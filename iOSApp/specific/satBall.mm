#import "satBall.h"@implementation satBall- (id)init {    int i;    	if ((self = [super init])) {                for (i=0; i<NUM_SATS; ++i) {             sats[i] = [[satellite alloc] init];        }                lastCount = 0;         loaded = 0;                 oldClosest = 0;         switcher = 0;         stripeCt = 2;                 maxSats = NUM_SATS;                        lastToDraw = 0;        fract = 100;    }		return self;}- (void)setup:(sgManager*)aSG {       theSG = aSG;}- (void) takeName:(NSString*)aName {    if (lastCount<maxSats) {         [sats[lastCount] takeName: aName];     }}- (void)addSat:(satInitRec*)newbie {    int tx, ty;     mVec3 pos;         if (lastCount<maxSats) {         [sats[lastCount] reset: newbie];                [sats[lastCount]  update: 0.0];         [sats[lastCount]  getPos: &pos];             tx = random()%16;         ty = (random()%14) +2;         satInds[lastCount] = [theSG addBillboard: &pos: 200.0: tx: ty];                ++lastCount;      }    if (lastCount == maxSats) {        [self useFract];        loaded = 1;    }} - (void)takeFract:(int)f {    fract = f;    if(loaded==1) { [self useFract]; }}- (void)useFract {    float perc;    int i;        // 50<=f<=100        // f/10 = 10, 9, 8, 7, 6 or 5    stripeCt = 13 - (int)(fract/10); // 3 to 8    lastToDraw = lastCount;         perc = (fract-50.0)/50.0;   // NSLog(@"useFract: fract = %d   perc = %f", fract, perc);    lastToDraw = lastCount *perc;            for (i=0; i<lastCount; ++i) {        if (i<lastToDraw) {            [theSG unhideBillboard: satInds[i]];        } else {            [theSG hideBillboard: satInds[i]];        }    }       // NSLog(@"useFract: fract = %d   perc = %f   lastToDraw=%d", fract, perc, lastToDraw);}- (void)update:(double)yearFract {    int i;     mVec3 pos;        for (i=switcher; i<lastToDraw; i=i+stripeCt) {        [sats[i] update: yearFract];         [sats[i] getPos: &pos];        if (i==oldClosest) {             [theSG updateBillboard: satInds[i]: &pos: 300.0];       } else {           [theSG updateBillboard: satInds[i]: &pos: 80.0];        }    }          ++switcher;    if (switcher>=stripeCt) { switcher = 0; }    }- (int)hasNewName:(mVec3*)ground:(mVec3*)dir {     mVec3 pos, numerator, sec, x2;     int closest, i, res;     float minD, d;         mvEqAdd(&x2, ground, dir);     closest = oldClosest;     [sats[closest] getPos: &pos];    mvEqSub(&sec, &pos, &x2);     mvEqCross(&numerator, dir, &sec);     mvLength3(&numerator, &minD);        for (i=switcher; i<lastCount; i=i+stripeCt) {        [sats[i] getPos: &pos];                // from the internets!        mvEqSub(&sec, &pos, &x2);         mvEqCross(&numerator, dir, &sec);         mvLength3(&numerator, &d);                if (d<minD) {             closest = i;            minD = d;        }    }            res = 0;     if (closest != oldClosest) { res = 1; oldClosest = closest; }    return res; }- (NSString*)getName { return [sats[oldClosest] getName]; }- (int)getID { return [sats[oldClosest] getID]; }@end